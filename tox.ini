[tox]
requires = tox>=4
env_list =
    py{37,38,39,310,311,312,313,313t}
    pypy{37,38,39,310,311}
    flake8
    isort
    mypy-py{37,38,39,310,311,312,313,313t}
    mypy-pypy{38,39,310,311}  # Omit PyPy 3.7 - `typed-ast` fails to build.
    pyright-py{37,38,39,310,311,312,313,313t}
    pyright-pypy{38,39,310,311}  # Omit PyPy 3.7 - `typed-ast` fails to build.

[gh-actions]
python =
    3.7: py37, mypy-py37, pyright-py37
    3.8: py38, mypy-py38, pyright-py38
    3.9: py39, mypy-py39, pyright-py39
    3.10: py310, mypy-py310, pyright-py310
    3.11: py311, mypy-py311, pyright-py311
    3.12: py312, mypy-py312, pyright-py312
    3.13: py313, flake8, isort, mypy-py313, pyright-py313
    3.13t: py313t, mypy-py313t, pyright-py313t
    pypy-3.7: pypy37
    pypy-3.8: pypy38, mypy-pypy38, pyright-pypy38
    pypy-3.9: pypy39, mypy-pypy39, pyright-pypy39
    pypy-3.10: pypy310, mypy-pypy310, pyright-pypy310
    pypy-3.11: pypy311, mypy-pypy311, pyright-pypy311

[testenv]
description = Run unit tests
package = wheel
allowlist_externals = poetry
commands_pre =
    poetry export --only=test --output={env_tmp_dir}/requirements.txt
    pip install -qr {env_tmp_dir}/requirements.txt
commands =
    pytest --color=yes

[testenv:flake8]
description = flake8 lint
basepython = py313
commands_pre =
    poetry export --only=analyze --output={env_tmp_dir}/requirements.txt
    pip install -qr {env_tmp_dir}/requirements.txt
commands =
    flake8

[testenv:isort]
description = isort check
basepython = py313
commands_pre =
    poetry export --only=analyze --output={env_tmp_dir}/requirements.txt
    pip install -qr {env_tmp_dir}/requirements.txt
commands =
    isort --check .

[testenv:mypy-{py37,py38,py39,py310,py311,py312,py313,py313t,pypy37,pypy38,pypy39,pypy310,pypy311}]
description = mypy typecheck
commands_pre =
    poetry export --only=test,analyze --output={env_tmp_dir}/requirements.txt
    pip install -qr {env_tmp_dir}/requirements.txt
commands =
    mypy .

[testenv:pyright-{py37,py38,py39,py310,py311,py312,py313,py313t,pypy37,pypy38,pypy39,pypy310,pypy311}]
description = pyright typecheck
commands_pre =
    poetry export --only=test,analyze --output={env_tmp_dir}/requirements.txt
    pip install -qr {env_tmp_dir}/requirements.txt
commands =
    pyright
