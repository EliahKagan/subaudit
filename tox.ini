[tox]
requires = tox>=4
skip_missing_interpreters = false
env_list = py{37,38,39,310,311}, pypy{37,38,39}, flake8, isort, mypy, pyright

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py3.9
    3.10: py3.10
    3.11: py3.11, flake8, isort, mypy, pyright
    pypy-3.7: pypy37
    pypy-3.8: pypy38
    pypy-3.9: pypy39

[testenv]
description = Run unit tests
package = wheel
allowlist_externals = poetry
commands_pre =
    poetry export --only=test --output={env_tmp_dir}/requirements.txt
    pip install -qr {env_tmp_dir}/requirements.txt
commands =
    pytest --color=yes

[testenv:flake8]
description = flake8 lint
basepython = py311
commands_pre =
    poetry export --only=analyze --output={env_tmp_dir}/requirements.txt
    pip install -qr {env_tmp_dir}/requirements.txt
commands =
    flake8

[testenv:isort]
description = isort check
basepython = py311
commands_pre =
    poetry export --only=analyze --output={env_tmp_dir}/requirements.txt
    pip install -qr {env_tmp_dir}/requirements.txt
commands =
    isort --check .

[testenv:mypy]
description = mypy typecheck
basepython = py311
commands_pre =
    poetry export --only=test,analyze --output={env_tmp_dir}/requirements.txt
    pip install -qr {env_tmp_dir}/requirements.txt
commands =
    mypy .

[testenv:pyright]
description = pyright typecheck
basepython = py311
commands_pre =
    poetry export --only=test,analyze --output={env_tmp_dir}/requirements.txt
    pip install -qr {env_tmp_dir}/requirements.txt
commands =
    pyright
